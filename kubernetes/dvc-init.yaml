apiVersion: v1
kind: ConfigMap
metadata:
  name: dvc-init-script
  namespace: weather-ops
data:
  init_dvc.sh: |
    #!/bin/bash
    set -e
    
    echo "Starting data initialization..."
    
    # Set up data directory
    mkdir -p /app/data
    
    # Create sample weather data that matches your real data format
    echo "Creating weather data file..."
    cat > /app/data/cleaned_weather.csv << EOF
    time,tavg,tmin,tmax,prcp,wspd
    2014-01-01,20.2,16.0,26.4,0.0,10.1
    2014-01-02,20.1,16.0,26.4,0.0,10.1
    2014-01-03,21.1,15.0,28.4,0.0,10.1
    2014-01-04,21.4,15.4,29.0,0.0,10.1
    2014-01-05,21.7,16.4,29.5,0.0,10.1
    2014-01-06,22.7,16.4,30.8,0.0,10.1
    2014-01-07,21.4,15.0,30.8,0.0,10.1
    2014-01-08,20.7,15.5,29.3,0.0,10.1
    2014-01-09,21.0,15.5,28.0,0.0,10.1
    2014-01-10,22.0,17.1,29.7,0.0,10.1
    2014-01-11,21.8,16.9,29.7,0.0,10.1
    2014-01-12,22.5,16.9,30.6,0.0,10.1
    2014-01-13,21.9,15.6,30.6,0.0,10.1
    2014-01-14,22.4,17.0,30.5,0.0,10.1
    2014-01-15,22.1,16.3,29.5,0.0,10.1
    EOF
    
    # Install required packages for model creation
    echo "Installing Python packages for model creation..."
    pip install scikit-learn pandas numpy
    
    # Create a simple model for testing
    echo "Creating test model..."
    python - << 'PYEOF'
    import pickle
    import pandas as pd
    import numpy as np
    from sklearn.ensemble import RandomForestRegressor

    # Read the data we just created
    df = pd.read_csv('/app/data/cleaned_weather.csv')

    # Create lag features (3 days of lag)
    for feature in ['tavg', 'tmin', 'tmax', 'prcp', 'wspd']:
        for lag in range(1, 4):
            df[f"{feature}_t-{lag}"] = df[feature].shift(lag)

    # Drop rows with NaN values (first 3 days)
    df.dropna(inplace=True)

    # Prepare features and target
    X = df.drop(columns=['time', 'tavg'])
    y = df['tavg']

    # Create and train model
    model = RandomForestRegressor(n_estimators=10, random_state=42)
    model.fit(X, y)

    # Save model
    with open('/app/data/model.pkl', 'wb') as f:
        pickle.dump(model, f)

    print("Model created with features:", model.feature_names_in_)
    PYEOF
    
    echo "Data and model setup completed!"
    ls -la /app/data/